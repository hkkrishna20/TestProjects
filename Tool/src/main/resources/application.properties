server.port = 8082
server.servlet.contextPath=/OperationTool
spring.resources.static-locations=classpath:static
management.endpoint.shutdown.enabled=true
#==== connect to mysql ======#

spring.servlet.multipart.maxFileSize = -1
spring.servlet.multipart.maxRequestSize  = -1



#spring.http.multipart.max-file-size=100MB
#spring.http.multipart.max-request-size=100MB
spring.servlet.multipart.max-file-size=-1
spring.datasource.url=jdbc:mysql://localhost:3306/integration?useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.tomcat.max-wait=1000000000

# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.tomcat.max-active=5000

# Validate the connection before borrowing it from the pool.
spring.datasource.tomcat.test-on-borrow=true

#spring.datasource.jndi-name=java:jboss/datasources/customers

spring.datasource.hikari.maximum-pool-size=100

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1





security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=Spring Boot JWT Example Realm

security.jwt.client-id=testjwtclientid
security.jwt.client-secret=XY7kmzoNzl100
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=testjwtresourceid